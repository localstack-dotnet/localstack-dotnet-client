<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>netstandard2.0;net8.0;net9.0</TargetFrameworks>
        <AssemblyName>LocalStack.Client.Extensions</AssemblyName>
        <RootNamespace>LocalStack.Client.Extensions</RootNamespace>
        <Version>$(PackageExtensionVersion)</Version>

        <Title>LocalStack.NET Client</Title>
        <Description>
            Extensions for the LocalStack.NET Client to integrate with .NET Core configuration and dependency injection frameworks. The extensions also provides wrapper around AWSSDK.Extensions.NETCore.Setup to use both LocalStack and AWS side-by-side
        </Description>
        <PackageTags>aws-sdk, localstack, client-library, dotnet, dotnet-core</PackageTags>
        <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <EnablePackageValidation>true</EnablePackageValidation>
        <PackageValidationBaselineVersion>1.2.2</PackageValidationBaselineVersion>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <NoWarn>$(NoWarn);CA1510</NoWarn>
    </PropertyGroup>

    <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    </PropertyGroup>

    <ItemGroup>
        <TrimmerRootDescriptor Include="ILLink.Descriptors.xml" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="AWSSDK.Extensions.NETCore.Setup"/>

        <PackageReference Include="Microsoft.Extensions.Configuration.Abstractions" VersionOverride="3.1.32"/>
        <PackageReference Include="Microsoft.Extensions.Configuration.Binder" VersionOverride="3.1.32"/>
<!--        <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" VersionOverride="3.1.32"/>-->
        <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" VersionOverride="3.1.32"/>
        <PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" VersionOverride="3.1.32"/>

        <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="All"/>
    </ItemGroup>

    <!-- Net 8 and anything newer you explicitly list -->
    <ItemGroup Condition="'$(TargetFramework)' == 'net8.0' Or  '$(TargetFramework)' == 'net9.0' Or  '$(TargetFramework)' == 'net10.0'">
        <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" VersionOverride="8.0.0"/>
    </ItemGroup>

    <!-- Fallback for legacy TFMs (netstandard2.x, net461, etc.) -->
    <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
        <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" VersionOverride="3.1.32"/>
    </ItemGroup>


    <Target Name="PreBuild" AfterTargets="PreBuildEvent">
        <ItemGroup>
            <LicenseFile Include="../../LICENSE"/>
        </ItemGroup>
        <ItemGroup>
            <ReadmeFile Include="../../README.md"/>
        </ItemGroup>
        <Copy SourceFiles="@(LicenseFile)" DestinationFiles="@(LicenseFile->'./LICENSE.txt')" SkipUnchangedFiles="true"/>
        <Copy SourceFiles="@(ReadmeFile)" DestinationFiles="@(ReadmeFile->'./README.md')" SkipUnchangedFiles="true"/>
    </Target>

    <ItemGroup>
        <None Include="LICENSE.txt" Pack="true" PackagePath="">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Include="README.md" Pack="true" PackagePath="">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Include="../../assets/localstack-dotnet-square.png" Pack="true" PackagePath=""/>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\LocalStack.Client\LocalStack.Client.csproj"/>
    </ItemGroup>

</Project>